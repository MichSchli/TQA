<block>
    <configuration>
        <variable name="max_iterations">
            <default_value>1000</default_value>
        </variable>
        <variable name="validate_every_n">
            <default_value>10</default_value>
        </variable>
        <variable name="report_loss_every_n">
            <default_value>1</default_value>
        </variable>

        <variable name="data_folder">
        </variable>
        <variable name="mode_folder">
            <train_value>train</train_value>
            <validate_value>train</validate_value>
            <test_value>train</test_value>
        </variable>
        <variable name="batch_size">
            <default_value>2</default_value>
        </variable>
    </configuration>
    <canvas name="main">
        <component name="query_reader" type="ListReader">
            <file_path>$data_folder/$mode_folder/questions.txt</file_path>
            <separators>\n| </separators>
            <soft_dimensions>1</soft_dimensions>
            <batch_size>$batch_size</batch_size>
        </component>
        <component name="evidence_reader" type="ListReader">
            <file_path>$data_folder/$mode_folder/evidence.txt</file_path>
            <separators>\n\n|\n| </separators>
            <soft_dimensions>1,2</soft_dimensions>
            <batch_size>$batch_size</batch_size>
        </component>
        <component name="answer_reader" type="ListReader">
            <file_path>$data_folder/$mode_folder/answers.txt</file_path>
            <separators>\n|:|,|-</separators>
            <soft_dimensions>1,2</soft_dimensions>
            <batch_size>$batch_size</batch_size>
        </component>

        <component name="evidence_elmo" type="ElmoEmbedding" language="tensorflow">
        </component>
        <edge>
                <source socket="output">evidence_reader</source>
                <target socket="input">evidence_elmo</target>
        </edge>

        <component name="start_logits" type="MultilayerPerceptron" language="tensorflow">
            <dimensions>1024,1</dimensions>
        </component>
        <edge>
                <source socket="word_embeddings">evidence_elmo</source>
                <target socket="input">start_logits</target>
        </edge>

        <component name="end_logits" type="MultilayerPerceptron" language="tensorflow">
            <dimensions>1024,1</dimensions>
        </component>
        <edge>
                <source socket="word_embeddings">evidence_elmo</source>
                <target socket="input">end_logits</target>
        </edge>

        <component name="start_sigmoid" type="Softmax" language="tensorflow">
        </component>
        <edge>
                <source socket="output">start_logits</source>
                <target socket="input">start_sigmoid</target>
        </edge>

        <component name="start_prob_ext" type="AddDimensions" language="tensorflow">
            <dim_changes>3:1</dim_changes>
        </component>
        <edge>
                <source socket="output">start_sigmoid</source>
                <target socket="input">start_prob_ext</target>
        </edge>

        <component name="end_sigmoid" type="Softmax" language="tensorflow">
        </component>
        <edge>
                <source socket="output">end_logits</source>
                <target socket="input">end_sigmoid</target>
        </edge>

        <component name="end_prob_ext" type="AddDimensions" language="tensorflow">
            <dim_changes>2:1</dim_changes>
        </component>
        <edge>
                <source socket="output">end_sigmoid</source>
                <target socket="input">end_prob_ext</target>
        </edge>

        <component name="score_tensor" type="Add" language="tensorflow">
        </component>
        <edge>
                <source socket="output">start_prob_ext</source>
                <target socket="left">score_tensor</target>
        </edge>
        <edge>
                <source socket="output">end_prob_ext</source>
                <target socket="right">score_tensor</target>
        </edge>

        <component name="span_logic_band" type="MatrixBand" language="tensorflow">
            <row_band_end>0</row_band_end>
            <column_band_end>3</column_band_end>
        </component>
        <edge>
                <source socket="output">score_tensor</source>
                <target socket="input">span_logic_band</target>
        </edge>

        <component name="pred_indexes" type="Argmax" language="tensorflow">
            <reduce_dimensions>1,2,3</reduce_dimensions>
            <mark socket="output">prediction</mark>
        </component>
        <edge>
                <source socket="output">span_logic_band</source>
                <target socket="input">pred_indexes</target>
        </edge>

        <component name="gold_start_slicer" type="DataSlicer" language="python">
            <slice>:,:,:,0</slice>
        </component>
        <edge cast="int">
                <source socket="output">answer_reader</source>
                <target socket="input">gold_start_slicer</target>
        </edge>

        <component name="gold_end_slicer" type="DataSlicer" language="python">
            <slice>:,:,:,1</slice>
        </component>
        <edge cast="int">
                <source socket="output">answer_reader</source>
                <target socket="input">gold_end_slicer</target>
        </edge>

        <component name="gold_start_index_list" type="IndexConverter" language="tensorflow">
        </component>
        <edge>
                <source socket="output">gold_start_slicer</source>
                <target socket="input">gold_start_index_list</target>
        </edge>

        <component name="gold_end_index_list" type="IndexConverter" language="tensorflow">
        </component>
        <edge>
                <source socket="output">gold_end_slicer</source>
                <target socket="input">gold_end_index_list</target>
        </edge>

        <component name="start_labels" type="ScatterLike" language="tensorflow">
            <constant_value>1</constant_value>
        </component>
        <edge>
                <source socket="output">gold_start_index_list</source>
                <target socket="indexes">start_labels</target>
        </edge>
        <edge>
                <source socket="output">start_logits</source>
                <target socket="shape">start_labels</target>
        </edge>

        <component name="end_labels" type="ScatterLike" language="tensorflow">
            <constant_value>1</constant_value>
        </component>
        <edge>
                <source socket="output">gold_end_index_list</source>
                <target socket="indexes">end_labels</target>
        </edge>
        <edge>
                <source socket="output">end_logits</source>
                <target socket="shape">end_labels</target>
        </edge>

        <component name="start_loss" type="LogSumExpLoss" language="tensorflow">
        </component>
        <edge>
                <source socket="output">start_logits</source>
                <target socket="logits">start_loss</target>
        </edge>
        <edge>
                <source socket="output">start_labels</source>
                <target socket="labels">start_loss</target>
        </edge>

        <component name="end_loss" type="LogSumExpLoss" language="tensorflow">
        </component>
        <edge>
                <source socket="output">end_logits</source>
                <target socket="logits">end_loss</target>
        </edge>
        <edge>
                <source socket="output">end_labels</source>
                <target socket="labels">end_loss</target>
        </edge>

        <component name="final_loss" type="Add" language="tensorflow">
            <mark socket="output">loss</mark>
        </component>
        <edge>
                <source socket="output">start_loss</source>
                <target socket="left">final_loss</target>
        </edge>
        <edge>
                <source socket="output">end_loss</source>
                <target socket="right">final_loss</target>
        </edge>

        <component name="upd" type="AdamUpdater" language="tensorflow">
            <learning_rate>0.001</learning_rate>
            <gradient_clip>1.0</gradient_clip>
            <mark socket="update">update</mark>
        </component>
        <edge>
                <source socket="output">final_loss</source>
                <target socket="loss">upd</target>
        </edge>
    </canvas>
</block>